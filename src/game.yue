{ graphics: lg, mouse: lm, timer: lt, window: lw } = love

import "lib.lume" as L
import "lib.bump"
import "lib.lovebird"
import "src.player"
import "src.brick"
import "src.ball"

export class Game
  new: =>
    @iTime = 0
    @iScreenWidth, @iScreenHeight = lw.getMode! -- Discard table, keep resolution
    @world = bump.newWorld(16) -- 32 is cell size
    @player = player.Player(@world) -- Create player paddle

    -- Create rows and columns of bricks
    @brick_width, @brick_height, @brick_gap = 98, 34, 2 -- 98x34 pixels, 2 pixels gap
    @grid = {width: 18, height: 10} -- 18 columns, 10 rows
    @bricks = {}
    id = 0
    for row = 1, @grid.width
      for col = 1, @grid.height
        id += 1
        @bricks[] = brick.Brick(row * @brick_width + @brick_gap, col * @brick_height + @brick_gap, @world, id)
    @ball = ball.Ball(@iScreenWidth / 2 , @iScreenHeight - 150, @world)

    -- Add all entities to the world
    @world\add(@player, @player.pos.x, @player.pos.y, @player.image_width, @player.image_height)
    @world\add(@ball, @ball.pos.x, @ball.pos.y, @ball.image_width, @ball.image_height)
    for i=1, #@bricks do
      @world\add(@bricks[i], @bricks[i].pos.x, @bricks[i].pos.y,
                 @bricks[i].image_width, @bricks[i].image_height)

  update: (dt)=>
    @iTime += dt
    for brick in *@bricks do brick\update(dt, @iScreenWidth, @iScreenHeight)
    @player\update(dt)
    @move_ball(dt)
    @ball\update(dt)

  ballFilter: (item, other)=>
    return 'bounce'

  move_ball: (dt)=>
    -- yue.p @ball
    goal_x, goal_y = @ball.pos.x + @ball.velocity.x * dt, @ball.pos.y + @ball.velocity.y * dt
    actual_x, actual_y, cols, len = @world\move(@ball, goal_x, goal_y, @ballFilter)
    @ball.pos.x, @ball.pos.y = actual_x, actual_y
    for i=1, len do
      col = cols[i]
      yue.p col.other
      if col.other.id
        @remove_bricks(col.other)
        @ball.velocity.y = -@ball.velocity.y

  remove_bricks: (brick)=>
    L.remove(@bricks, brick)
    @world\remove(brick)

  mousepressed: (x, y, button)=>
    -- Delete bricks with left mouse button
    if button == 1
      item_clicked = @world\queryPoint(x, y)[1] -- Get brick at clicked position
      return unless item_clicked
      yue.p item_clicked
      @remove_bricks(item_clicked)

  draw: (dt, iTime)=>
    lg.print("mouse_x: " .. lm.getX! .. " - mouse_y: " .. lm.getY!, 5, 5)
    lg.print("Bricks Remaining" .. @world\countItems!, 350, 5)
    lg.print("Current FPS: " .. tostring(lt.getFPS!), 750, 5)
    lg.print("Time Elapsed: " .. L.round(@iTime, 0.001), 1450, 5)

    @ball\draw!
    for brick in *@bricks do brick\draw!
    @player\draw!
